{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "overrides": [
    {
      "files": [
        "*.tsx"
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off"
      }
    }
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": [
    "react",
    "flowtype",
    "@typescript-eslint"
  ],
  "rules": {
    "indent": [
      "error",
      4
    ],
    "quotes": [
      "error",
      "double"
    ],
    "semi": [
      "error",
      "always"
    ],
    "eol-last": [
      "error",
      "always"
    ],
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 2,
        "maxEOF": 1
      }
    ],
    "no-implicit-coercion": [
      "error",
      {
        "string": false
      }
    ],
    "array-bracket-spacing": "error",
    "arrow-spacing": [
      "error",
      {
        "before": true,
        "after": true
      }
    ],
    "block-spacing": "error",
    "comma-spacing": "error",
    "computed-property-spacing": "error",
    "func-call-spacing": "error",
    "generator-star-spacing": "error",
    "key-spacing": "error",
    "keyword-spacing": "error",
    "no-tabs": "error",
    "no-whitespace-before-property": "error",
    "object-curly-spacing": "error",
    "semi-spacing": "error",
    "space-before-blocks": "error",
    "space-before-function-paren": [
      "error",
      "never"
    ],
    "space-in-parens": "error",
    "space-infix-ops": "error",
    "space-unary-ops": "error",
    "flowtype/space-after-type-colon": "error",
    "flowtype/space-before-type-colon": "error",
    "@typescript-eslint/type-annotation-spacing": [
      "error",
      {
        "before": false,
        "after": true,
        "overrides": {
          "arrow": {
            "before": true,
            "after": true
          }
        }
      }
    ],

    "comma-dangle": [
      "error",
      {
        "arrays": "always-multiline",
        "functions": "only-multiline",
        "objects": "always-multiline"
      }
    ],

    "@typescript-eslint/explicit-function-return-type": [
      "error",
      {
        "allowExpressions": false
      }
    ],
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-unused-vars": "off",
    "@typescript-eslint/ban-ts-comment": "off"
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  }
}
